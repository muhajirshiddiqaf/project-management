name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Build and test
      run: |
        npm run install:all
        npm run test
        npm run build

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./frontend/build
        asset_name: frontend-build.zip
        asset_content_type: application/zip

  docker-release:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract tag name
      id: extract_tag
      run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build and push backend image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/project-management-backend:${{ steps.extract_tag.outputs.TAG }} ./backend
        docker build -t ${{ secrets.DOCKER_USERNAME }}/project-management-backend:latest ./backend
        docker push ${{ secrets.DOCKER_USERNAME }}/project-management-backend:${{ steps.extract_tag.outputs.TAG }}
        docker push ${{ secrets.DOCKER_USERNAME }}/project-management-backend:latest

    - name: Build and push frontend image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/project-management-frontend:${{ steps.extract_tag.outputs.TAG }} ./frontend
        docker build -t ${{ secrets.DOCKER_USERNAME }}/project-management-frontend:latest ./frontend
        docker push ${{ secrets.DOCKER_USERNAME }}/project-management-frontend:${{ steps.extract_tag.outputs.TAG }}
        docker push ${{ secrets.DOCKER_USERNAME }}/project-management-frontend:latest
